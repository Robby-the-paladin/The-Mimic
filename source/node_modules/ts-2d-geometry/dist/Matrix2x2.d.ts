import { Optional } from '@ruffy/ts-optional';
/**
 * Represents a 2x2 matrix.
 */
export declare class Matrix2x2 {
    private elements;
    constructor(elements: number[][]);
    /**
     * Returns a rotation matrix with the given degrees. that rotates
     * Vectors clockwise.
     */
    static rotationDegrees(degrees: number): Matrix2x2;
    /**
     * Returns a 2x2 Matrix from an array. The element
     * in the array are given in the following places:
     * [(0,0), (1,0), (0,1), (1,1)]
     */
    static fromArray(a: number[]): Matrix2x2;
    /**
     * Returns the element in the given position.
     * @param y
     * The y of the element.
     * @param x
     * The x of the element
     */
    get(y: number, x: number): number;
    /**
     * Multiplies this matrix with a vector.
     * @param v
     */
    times(v: number[]): number[];
    /**
     * Returns an inversed version of this matrix.
     */
    inverse(): Optional<Matrix2x2>;
    /**
     * Returns a matrix with the scaled by the given factor.
     * @param factor
     */
    scale(factor: number): Matrix2x2;
    /**
     * Calculates the determinant of the matrix.
     */
    det(): number;
}
//# sourceMappingURL=Matrix2x2.d.ts.map